## Alloy


T> Alloys provide reusable logic for cogs, like libraries or mixins or state machines with declarative goodness.

The alloy tag adds additional blueprint and script functionality to (as if just above) the cog in which it is declared.
Alloys can act as libraries or state machines and do not have a display declaration.
They can be stacked within a cog, but they cannot be nested within other alloys.

The script contents of an alloy are exposed on the script of the declaring cog (using the alloy's name attribute).

### Alloy Tag Examples

```html
<alloy url="menuStateMachine.html" />
<alloy url="supplyChainFeed.html" path="APP_FEEDS" />
```

### Alloy Tag Attributes

name
: Name to reference. [*string*]

url*
: Relative file path, absolute file path or alias name.
  Resolves to file containing an alloy definition that implements script and/or blueprint declarations.
  Alloy files are like cog files without display declarations. [*string*]

path
: Relative or absolute directory path, prepended to the url. Can be another alias defined previously. [*string*]

source
: External data source for configuration. [*data*, prop, run, read]

item
: Internal data source created within the alloy (using source). [*data* itemData, prop, run, read]

route
: Indicates a namespace (named after the alloy) for data tags. [*boolean*]

------
