## Cog

TLDR: The core component of the Cognition framework. Put **cogs** within **cogs** to build an application as a big nested tree (it's turtles all the way down). Each **cog** is constructed from a file containing a **display** tag and optional **blueprint** and **script** tags. 

The **cog** tag embeds a visible **cog** component within the HTML display of the current **cog**, loading (lazy-style) into (or about) the DOM container referenced by its 'id' attribute. 

### Cog Tag Examples

```html
   <cog id="header" url="HEADER"  />
   <cog id="panel" url="panel.html" path="core/components"  />  
   <cog id="alert" url="../../indicators/alert.html" />
   <cog id="page" url="data currentPage" path="PAGES"  />
   <cog id="status" source="run getStatus" item="config status" url="status.html" />
   <cog id="footer" and="prepend" url="FOOTER"  />
```

### Cog Tag Attributes

|Name | Description | [Types] & Options |
|-----------|--------------|-----------|
|**id**| The DOM element id used as placeholder or reference point by the **cog**. | [string] |
|-----------|--------------|-----------|
|**url**|  A relative or absolute path to a file containing a **cog** definition with at least a **display** declaration. | [*string*, prop, data, run, config] |
|-----------|--------------|-----------|
|path|  A directory used as a prefix for the 'url' attribute. It can be an actual path or the name of another **alias** defined previously. | [string] |
|-----------|--------------|-----------|
|from|  The data source or configuration injected into the **cog**, generally an options object in the defined in the *script* tag. | [*prop*, data, run, config] |
|-----------|--------------|-----------|
|to|  The name of the storage item dynamically created within the **cog** to hold its configuration; it defaults to a 'config' attribute named 'item'. | [*config item*, data, prop, run] |
|-----------|--------------|-----------|
|and|  The DOM method used to place the **cog** relative to the placeholder identified by the 'id' attribute. | *append*, prepend, before, after, replace  |

